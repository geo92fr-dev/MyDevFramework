@echo off
setlocal EnableDelayedExpansion

REM ============================================================================
REM SCRIPT DE CR√âATION DE PROJET EXTERNE - MyDevFramework
REM ============================================================================
echo.
echo üöÄ CR√âATION PROJET EXTERNE - MyDevFramework
echo ============================================================================

REM V√©rifier si un nom de projet est fourni
if "%1"=="" (
    echo ‚ùå Erreur: Nom du projet requis
    echo Usage: create-external-project.bat MonNomDeProjet
    echo.
    pause
    exit /b 1
)

set PROJECT_NAME=%1
set FRAMEWORK_SOURCE=C:\MyDevFramework
set EXTERNAL_BASE=C:\MyDevProject\external

echo üìã Projet √† cr√©er: %PROJECT_NAME%
echo üìÇ Framework source: %FRAMEWORK_SOURCE%
echo üéØ Destination externe: %EXTERNAL_BASE%
echo.

REM √âtape 1: Cr√©er les dossiers externes
echo ‚ö° √âtape 1/6: Cr√©ation des dossiers externes...
if not exist "%EXTERNAL_BASE%" (
    mkdir "%EXTERNAL_BASE%"
    echo ‚úÖ Dossier cr√©√©: %EXTERNAL_BASE%
) else (
    echo ‚ÑπÔ∏è  Dossier existe d√©j√†: %EXTERNAL_BASE%
)

if not exist "%EXTERNAL_BASE%\projects" mkdir "%EXTERNAL_BASE%\projects"
if not exist "%EXTERNAL_BASE%\templates" mkdir "%EXTERNAL_BASE%\templates"
if not exist "%EXTERNAL_BASE%\backups" mkdir "%EXTERNAL_BASE%\backups"
echo ‚úÖ Structure des dossiers externes cr√©√©e
echo.

REM √âtape 2: Copier le framework vers le dossier externe
echo ‚ö° √âtape 2/6: Copie du framework...
set FRAMEWORK_DEST=%EXTERNAL_BASE%\framework
if exist "%FRAMEWORK_DEST%" (
    echo ‚ÑπÔ∏è  Framework d√©j√† pr√©sent, mise √† jour...
    rmdir /s /q "%FRAMEWORK_DEST%"
)

xcopy "%FRAMEWORK_SOURCE%" "%FRAMEWORK_DEST%" /e /i /q /y
if errorlevel 1 (
    echo ‚ùå Erreur lors de la copie du framework
    pause
    exit /b 1
)
echo ‚úÖ Framework copi√© vers: %FRAMEWORK_DEST%
echo.

REM √âtape 3: Configurer le mode EXTERNE dans le framework copi√©
echo ‚ö° √âtape 3/6: Configuration du mode EXTERNE...
cd /d "%FRAMEWORK_DEST%"
node cli/fw.js ini mode EXTERNE
if errorlevel 1 (
    echo ‚ùå Erreur lors de la configuration du mode EXTERNE
    pause
    exit /b 1
)
echo ‚úÖ Mode EXTERNE configur√©
echo.

REM √âtape 4: Cr√©er le projet
echo ‚ö° √âtape 4/6: Cr√©ation du projet %PROJECT_NAME%...
node cli/fw.js create "%PROJECT_NAME%"
if errorlevel 1 (
    echo ‚ùå Erreur lors de la cr√©ation du projet
    pause
    exit /b 1
)
echo ‚úÖ Projet %PROJECT_NAME% cr√©√© avec succ√®s
echo.

REM √âtape 5: Installer les d√©pendances
echo ‚ö° √âtape 5/6: Installation des d√©pendances npm...
cd /d "%FRAMEWORK_DEST%\%PROJECT_NAME%"
call npm install --silent
if errorlevel 1 (
    echo ‚ö†Ô∏è  Attention: Erreur lors de l'installation npm
    echo Vous pouvez installer manuellement avec: npm install
) else (
    echo ‚úÖ D√©pendances npm install√©es
)
echo.

REM √âtape 6: Informations finales
echo ‚ö° √âtape 6/6: Finalisation...
echo.
echo üéâ PROJET EXTERNE CR√â√â AVEC SUCC√àS !
echo ============================================================================
echo üìÅ Emplacement du projet: %FRAMEWORK_DEST%\%PROJECT_NAME%
echo üõ†Ô∏è  Framework externe: %FRAMEWORK_DEST%
echo.
echo üìù PROCHAINES √âTAPES:
echo    1. Ouvrir VSCode dans: %FRAMEWORK_DEST%\%PROJECT_NAME%
echo    2. Lancer le serveur: npm run dev
echo    3. Ouvrir: http://localhost:5173
echo.
echo üöÄ COMMANDES RAPIDES:
echo    cd /d "%FRAMEWORK_DEST%\%PROJECT_NAME%"
echo    code .
echo    npm run dev
echo.
echo ‚ú® Projet pr√™t pour le d√©veloppement !
echo ============================================================================

REM Proposer d'ouvrir VSCode automatiquement
echo.
set /p OPEN_VSCODE=ü§î Voulez-vous ouvrir le projet dans VSCode maintenant ? (O/n): 
if /i "!OPEN_VSCODE!"=="O" (
    echo üéØ Ouverture de VSCode...
    cd /d "%FRAMEWORK_DEST%\%PROJECT_NAME%"
    code .
) else if /i "!OPEN_VSCODE!"=="" (
    echo üéØ Ouverture de VSCode...
    cd /d "%FRAMEWORK_DEST%\%PROJECT_NAME%"
    code .
)

echo.
echo ‚úÖ Script termin√© avec succ√®s !
pause
